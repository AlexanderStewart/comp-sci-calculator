{"version":3,"sources":["pages/Home.jsx","App.jsx","index.jsx"],"names":["Home","useState","hex","setHex","decimal","setDecimal","octal","setOctal","binary","setBinary","className","type","bg","Form","variant","Group","Label","Control","as","rows","value","onChange","event","target","parseInt","toString","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.329a8e37.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n//Local stuff.\nimport \"../styles/main.scss\";\n\n//Bootstrap.\nimport Form from \"react-bootstrap/Form\";\n\n//Packages.\nimport ParticlesBg from \"particles-bg\";\n\nfunction Home() {\n  const [hex, setHex] = useState(\"\");\n  const [decimal, setDecimal] = useState(\"\");\n  const [octal, setOctal] = useState(\"\");\n  const [binary, setBinary] = useState(\"\");\n\n  function handleHexChange(event) {\n    if (event.target.value === \"\") {\n      setHex(\"\");\n      setDecimal(\"\");\n      setOctal(\"\");\n      setBinary(\"\");\n    } else {\n      setHex(event.target.value);\n      setDecimal(parseInt(event.target.value, 16));\n      setOctal(parseInt(event.target.value, 16).toString(8));\n      setBinary(parseInt(event.target.value, 16).toString(2));\n    }\n  }\n\n  function handleDecimalChange(event) {\n    if (event.target.value === \"\") {\n      setHex(\"\");\n      setDecimal(\"\");\n      setOctal(\"\");\n      setBinary(\"\");\n    } else {\n      setHex(parseInt(event.target.value, 10).toString(16));\n      setDecimal(event.target.value);\n      setOctal(parseInt(event.target.value, 10).toString(8));\n      setBinary(parseInt(event.target.value, 10).toString(2));\n    }\n  }\n\n  function handleOctalChange(event) {\n    if (event.target.value === \"\") {\n      setHex(\"\");\n      setDecimal(\"\");\n      setOctal(\"\");\n      setBinary(\"\");\n    } else {\n      setHex(parseInt(event.target.value, 8).toString(16));\n      setDecimal(parseInt(event.target.value, 8));\n      setOctal(event.target.value);\n      setBinary(parseInt(event.target.value, 8).toString(2));\n    }\n  }\n\n  function handleBinaryChange(event) {\n    if (event.target.value === \"\") {\n      setHex(\"\");\n      setDecimal(\"\");\n      setOctal(\"\");\n      setBinary(\"\");\n    } else {\n      setHex(parseInt(event.target.value, 2).toString(16));\n      setDecimal(parseInt(event.target.value, 2));\n      setOctal(parseInt(event.target.value, 2).toString(8));\n      setBinary(event.target.value);\n    }\n  }\n\n  return (\n    <div className=\"Home\">\n      <ParticlesBg type=\"circle\" bg={true} />\n\n      <div className=\"center-horizontally\">\n        <div className=\"column\">\n          <h1 className=\"header heavy-font\">CompSciCalculator</h1>\n          <div className=\"divider\"></div>\n        </div>\n      </div>\n\n      <div className=\"center-horizontally\">\n        <div className=\"column\">\n          <div className=\"converter-container\">\n            <h3 className=\"description light-font\">\n              Enter a number in any box to convert to the other number systems.\n            </h3>\n\n            <Form variant=\"dark\">\n              <Form.Group>\n                <Form.Label className=\"white-text\">Hex</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={hex}\n                  onChange={handleHexChange}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label className=\"white-text\">Decimal</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={decimal}\n                  onChange={handleDecimalChange}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label className=\"white-text\">Octal</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={octal}\n                  onChange={handleOctalChange}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label className=\"white-text\">Binary</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={binary}\n                  onChange={handleBinaryChange}\n                />\n              </Form.Group>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n//Pages.\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}